local clock = getTickCount --licalize getTickCount() function
local lootColPos = lootColPos --localize lootColPos table

--Writes de table to file in lua sintax. It's a script that writes a script
function writeTableToDisk()
	-- local time = clock()
	local colFile = fileCreate("lootPoints.lua") --create file
	colFile:write("--Loop spawn point positions\n") --write a header

	colFile:write("lootColPos = {\n") --main table declaration

	for className, classTable in pairs(lootColPos) do --iterate through col classes

		colFile:write("	[\"" ..className.. "\"] = {\n") --class table declaration

		colFile:write("		[\"x\"] = {") --x coordinate
		for colID = 1, #classTable.x, 1 do --iterate through x coods
			if classTable.x[colID] ~= false then --check if entry was not erased
				colFile:write(classTable.x[colID].. ",")
			else
				--entry erased, should not be written
			end
		end
		colFile:write("},\n") --close x coord table

		colFile:write("		[\"y\"] = {") --y coordinate
		for colID = 1, #classTable.y, 1 do --iterate through y coords
			if classTable.y[colID] ~= false then --check if entry was not erased
				colFile:write(classTable.y[colID].. ",")
			else
				--entry erased, should not be written
			end
		end
		colFile:write("},\n") --close y coord table

		colFile:write("		[\"z\"] = {") --z coordinate
		for colID = 1, #classTable.z, 1 do  --iterate through z coords
			if classTable.z[colID] ~= false then --check if entry was not erased
				colFile:write(classTable.z[colID].. ",")
			else
				--entry erased, should not be written
			end
		end
		colFile:write("},\n") --close z coord table

		colFile:write("	},\n") --close class table
	end
	colFile:write("}\n") --close main table
	colFile:write("--This script was automatically generated by a script") --file footnote
	-- colFile:flush() --flush buffer to disk
	colFile:close() --flush close working file
	-- outputDebugString("Script generated in " ..clock() - time .. "ms") --print how long it took
end
